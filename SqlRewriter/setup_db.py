import os
import json
import mysql.connector 

# ========== Get Connector ========== #
def setup_tpcds_database(
    config_file: str = './config.json',
    sql_dump_file: str = './tpcds_data_dump.sql'
) -> mysql.connector.connection.MySQLConnection:
    """
    Connects to MySQL, recreates the 'tpcsds' database, loads data from the given SQL dump file,
    and returns a connection to the newly created database.

    Args:
        config_file (str): Path to JSON config file with host, user, passwd.
        sql_dump_file (str): Path to SQL file to execute (e.g., generated by DuckDB).

    Returns:
        mysql.connector.connection.MySQLConnection: Connection to the newly created 'tpcsds' database.
    """
    if not os.path.exists(config_file):
        raise FileNotFoundError(f"Config file not found: {config_file}")
    if not os.path.exists(sql_dump_file):
        raise FileNotFoundError(f"SQL dump file not found: {sql_dump_file}")

    with open(config_file) as f:
        config = json.load(f)

    # ----- Initial connection (no DB specified) ----- #
    conn = mysql.connector.connect(
        host=config['host'],
        user=config['user'],
        passwd=config['passwd']
    )
    cursor = conn.cursor()

    # ----- Drop and recreate the database ----- #
    cursor.execute("SET FOREIGN_KEY_CHECKS = 0;")
    cursor.execute("DROP DATABASE IF EXISTS tpcsds;")
    cursor.execute("CREATE DATABASE tpcsds;")
    cursor.execute("USE tpcsds;")
    print("Database 'tpcsds' recreated successfully.")

    # ----- Load the SQL dump ----- #
    with open(sql_dump_file, 'r', encoding='utf-8') as f:
        sql_script = f.read()

    # Execute multiple SQL statements safely
    
    for statement in sql_script.split(';'):
        stmt = statement.strip()
        if stmt:
            try:
                cursor.execute(stmt)
            except mysql.connector.Error as err:
                print(f"Error executing statement: {stmt[:100]}...\n{err}")

    conn.commit()
    cursor.close()
    conn.close()

    # ----- Reconnect to the new database ----- #
    return mysql.connector.connect(
        host=config['host'],
        user=config['user'],
        passwd=config['passwd'],
        database="tpcsds"
    )


# ========== Main Function ========== #
if __name__ == '__main__':
    conn = setup_tpcds_database()
    print("TPC-DS database is ready and loaded.")